{
    "Parameters": {
      "SecurityGroupId": {
        "Type": "String",
        "Description": "Default Security Group Id for Default VPC"
      },
      "SubnetIds": {
        "Type": "CommaDelimitedList",
        "Description": "Subnet Ids"
      },
      "AvailabilityZones": {
        "Type": "CommaDelimitedList",
        "Description": "Availability Zones"
      },
      "VpcId": {
        "Type": "String",
        "Description": "Default VPC Id"
      },
      "CodeBucketArn": {
        "Type": "String",
        "Description": "Lambda Code Bucket Arn"
      },
      "CodeBucketKey": {
        "Type": "String",
        "Description": "Lambda Code Bucket Key"
      }
    },
    "Resources": {
      "redisstackserverredisstackserversubnetgrpAA784333": {
        "Type": "AWS::ElastiCache::SubnetGroup",
        "Properties": {
          "Description": "subnet grp for redis server",
          "SubnetIds": {
            "Ref": "SubnetIds"
          },
          "CacheSubnetGroupName": "redis-stack-server-subnet-grp"
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-server/redis-stack-server-subnet-grp"
        }
      },
      "redisstackserverredisstackserverclusterDDB47406": {
        "Type": "AWS::ElastiCache::CacheCluster",
        "Properties": {
          "CacheNodeType": "cache.t2.micro",
          "Engine": "redis",
          "NumCacheNodes": 1,
          "CacheSubnetGroupName": "redis-stack-server-subnet-grp",
          "ClusterName": "redis-stack-server-cluster",
          "Port": 6379,
          "VpcSecurityGroupIds": [
            {
              "Ref": "SecurityGroupId"
            }
          ]
        },
        "DependsOn": [
          "redisstackserverredisstackserversubnetgrpAA784333"
        ],
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-server/redis-stack-server-cluster"
        }
      },
      "redisstackchargerequestredislambdaredisstackchargerequestredislambdafnServiceRole363DF12F": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                ]
              ]
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-charge_request_redis-lambda/redis-stack-charge_request_redis-lambda-fn/ServiceRole/Resource"
        }
      },
      "redisstackchargerequestredislambdaredisstackchargerequestredislambdafn8C03E0F3": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "CodeBucketArn"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "S3Key": {
              "Ref": "CodeBucketKey"
            }
          },
          "Handler": "index.chargeRequestRedis",
          "Role": {
            "Fn::GetAtt": [
              "redisstackchargerequestredislambdaredisstackchargerequestredislambdafnServiceRole363DF12F",
              "Arn"
            ]
          },
          "Runtime": "nodejs18.x",
          "Description": "charge_request_redis lambda",
          "Environment": {
            "Variables": {
              "ENDPOINT": {
                "Fn::GetAtt": [
                  "redisstackserverredisstackserverclusterDDB47406",
                  "RedisEndpoint.Address"
                ]
              },
              "PORT": {
                "Fn::GetAtt": [
                  "redisstackserverredisstackserverclusterDDB47406",
                  "RedisEndpoint.Port"
                ]
              }
            }
          },
          "FunctionName": "redis-stack-charge_request_redis-lambda-fn",
          "MemorySize": 128,
          "Timeout": 1,
          "VpcConfig": {
            "SecurityGroupIds": [
              {
                "Ref": "SecurityGroupId"
              }
            ],
            "SubnetIds": {
              "Ref": "SubnetIds"
            }
          },
          "ProvisionedConcurrencyConfig": {
            "ProvisionedConcurrentExecutions": 5
          }
        },
        "DependsOn": [
          "redisstackchargerequestredislambdaredisstackchargerequestredislambdafnServiceRole363DF12F"
        ],
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-charge_request_redis-lambda/redis-stack-charge_request_redis-lambda-fn/Resource"
        }
      },
      "redisstackresetredislambdaredisstackresetredislambdafnServiceRole420930B4": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "lambda.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
                ]
              ]
            },
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                ]
              ]
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-reset_redis-lambda/redis-stack-reset_redis-lambda-fn/ServiceRole/Resource"
        }
      },
      "redisstackresetredislambdaredisstackresetredislambdafnDAD2AAC5": {
        "Type": "AWS::Lambda::Function",
        "Properties": {
          "Code": {
            "S3Bucket": {
              "Fn::Select": [
                0,
                {
                  "Fn::Split": [
                    "/",
                    {
                      "Fn::Select": [
                        5,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Ref": "CodeBucketArn"
                            }
                          ]
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "S3Key": {
              "Ref": "CodeBucketKey"
            }
          },
          "Handler": "index.resetRedis",
          "Role": {
            "Fn::GetAtt": [
              "redisstackresetredislambdaredisstackresetredislambdafnServiceRole420930B4",
              "Arn"
            ]
          },
          "Runtime": "nodejs18.x",
          "Description": "reset_redis lambda",
          "Environment": {
            "Variables": {
              "ENDPOINT": {
                "Fn::GetAtt": [
                  "redisstackserverredisstackserverclusterDDB47406",
                  "RedisEndpoint.Address"
                ]
              },
              "PORT": {
                "Fn::GetAtt": [
                  "redisstackserverredisstackserverclusterDDB47406",
                  "RedisEndpoint.Port"
                ]
              }
            }
          },
          "FunctionName": "redis-stack-reset_redis-lambda-fn",
          "MemorySize": 128,
          "Timeout": 1,
          "VpcConfig": {
            "SecurityGroupIds": [
              {
                "Ref": "SecurityGroupId"
              }
            ],
            "SubnetIds": {
              "Ref": "SubnetIds"
            }
          }
        },
        "DependsOn": [
          "redisstackresetredislambdaredisstackresetredislambdafnServiceRole420930B4"
        ],
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-reset_redis-lambda/redis-stack-reset_redis-lambda-fn/Resource"
        }
      },
      "redisstackapiredisstackapigateway34520EA0": {
        "Type": "AWS::ApiGateway::RestApi",
        "Properties": {
          "Name": "redis-stack-api-gateway"
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Resource"
        }
      },
      "redisstackapiredisstackapigatewayCloudWatchRoleED588089": {
        "Type": "AWS::IAM::Role",
        "Properties": {
          "AssumeRolePolicyDocument": {
            "Statement": [
              {
                "Action": "sts:AssumeRole",
                "Effect": "Allow",
                "Principal": {
                  "Service": "apigateway.amazonaws.com"
                }
              }
            ],
            "Version": "2012-10-17"
          },
          "ManagedPolicyArns": [
            {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
                ]
              ]
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/CloudWatchRole/Resource"
        }
      },
      "redisstackapiredisstackapigatewayAccount10D3EE6B": {
        "Type": "AWS::ApiGateway::Account",
        "Properties": {
          "CloudWatchRoleArn": {
            "Fn::GetAtt": [
              "redisstackapiredisstackapigatewayCloudWatchRoleED588089",
              "Arn"
            ]
          }
        },
        "DependsOn": [
          "redisstackapiredisstackapigateway34520EA0"
        ],
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Account"
        }
      },
      "redisstackapiredisstackapigatewayDeployment3F55047539e10a8b45c4c8d995a7ea86d95fcf28": {
        "Type": "AWS::ApiGateway::Deployment",
        "Properties": {
          "RestApiId": {
            "Ref": "redisstackapiredisstackapigateway34520EA0"
          },
          "Description": "Automatically created by the RestApi construct"
        },
        "DependsOn": [
          "redisstackapiredisstackapigatewaychargerequestredisPOST16D6A083",
          "redisstackapiredisstackapigatewaychargerequestredis4723C36B",
          "redisstackapiredisstackapigatewayGET649689B1",
          "redisstackapiredisstackapigatewayresetredisPOST74FBE79C",
          "redisstackapiredisstackapigatewayresetredis71789057"
        ],
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Deployment/Resource"
        }
      },
      "redisstackapiredisstackapigatewayDeploymentStageprod30E99B02": {
        "Type": "AWS::ApiGateway::Stage",
        "Properties": {
          "RestApiId": {
            "Ref": "redisstackapiredisstackapigateway34520EA0"
          },
          "DeploymentId": {
            "Ref": "redisstackapiredisstackapigatewayDeployment3F55047539e10a8b45c4c8d995a7ea86d95fcf28"
          },
          "StageName": "prod"
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/DeploymentStage.prod/Resource"
        }
      },
      "redisstackapiredisstackapigatewayGET649689B1": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "HttpMethod": "GET",
          "ResourceId": {
            "Fn::GetAtt": [
              "redisstackapiredisstackapigateway34520EA0",
              "RootResourceId"
            ]
          },
          "RestApiId": {
            "Ref": "redisstackapiredisstackapigateway34520EA0"
          },
          "AuthorizationType": "NONE",
          "Integration": {
            "Type": "MOCK"
          }
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Default/GET/Resource"
        }
      },
      "redisstackapiredisstackapigatewaychargerequestredis4723C36B": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "ParentId": {
            "Fn::GetAtt": [
              "redisstackapiredisstackapigateway34520EA0",
              "RootResourceId"
            ]
          },
          "PathPart": "charge-request-redis",
          "RestApiId": {
            "Ref": "redisstackapiredisstackapigateway34520EA0"
          }
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Default/charge-request-redis/Resource"
        }
      },
      "redisstackapiredisstackapigatewaychargerequestredisPOSTApiPermissionredisstackredisstackapiredisstackapigateway2FAC28C4POSTchargerequestredis39309DDC": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "redisstackchargerequestredislambdaredisstackchargerequestredislambdafn8C03E0F3",
              "Arn"
            ]
          },
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":execute-api:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":",
                {
                  "Ref": "redisstackapiredisstackapigateway34520EA0"
                },
                "/",
                {
                  "Ref": "redisstackapiredisstackapigatewayDeploymentStageprod30E99B02"
                },
                "/POST/charge-request-redis"
              ]
            ]
          }
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Default/charge-request-redis/POST/ApiPermission.redisstackredisstackapiredisstackapigateway2FAC28C4.POST..charge-request-redis"
        }
      },
      "redisstackapiredisstackapigatewaychargerequestredisPOSTApiPermissionTestredisstackredisstackapiredisstackapigateway2FAC28C4POSTchargerequestredis2AAC7184": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "redisstackchargerequestredislambdaredisstackchargerequestredislambdafn8C03E0F3",
              "Arn"
            ]
          },
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":execute-api:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":",
                {
                  "Ref": "redisstackapiredisstackapigateway34520EA0"
                },
                "/test-invoke-stage/POST/charge-request-redis"
              ]
            ]
          }
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Default/charge-request-redis/POST/ApiPermission.Test.redisstackredisstackapiredisstackapigateway2FAC28C4.POST..charge-request-redis"
        }
      },
      "redisstackapiredisstackapigatewaychargerequestredisPOST16D6A083": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "HttpMethod": "POST",
          "ResourceId": {
            "Ref": "redisstackapiredisstackapigatewaychargerequestredis4723C36B"
          },
          "RestApiId": {
            "Ref": "redisstackapiredisstackapigateway34520EA0"
          },
          "AuthorizationType": "NONE",
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "IntegrationResponses": [
              {
                "StatusCode": "200"
              }
            ],
            "Type": "AWS",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":lambda:path/2015-03-31/functions/",
                  {
                    "Fn::GetAtt": [
                      "redisstackchargerequestredislambdaredisstackchargerequestredislambdafn8C03E0F3",
                      "Arn"
                    ]
                  },
                  "/invocations"
                ]
              ]
            }
          },
          "MethodResponses": [
            {
              "StatusCode": "200"
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Default/charge-request-redis/POST/Resource"
        }
      },
      "redisstackapiredisstackapigatewayresetredis71789057": {
        "Type": "AWS::ApiGateway::Resource",
        "Properties": {
          "ParentId": {
            "Fn::GetAtt": [
              "redisstackapiredisstackapigateway34520EA0",
              "RootResourceId"
            ]
          },
          "PathPart": "reset-redis",
          "RestApiId": {
            "Ref": "redisstackapiredisstackapigateway34520EA0"
          }
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Default/reset-redis/Resource"
        }
      },
      "redisstackapiredisstackapigatewayresetredisPOSTApiPermissionredisstackredisstackapiredisstackapigateway2FAC28C4POSTresetredisD556F0D7": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "redisstackresetredislambdaredisstackresetredislambdafnDAD2AAC5",
              "Arn"
            ]
          },
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":execute-api:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":",
                {
                  "Ref": "redisstackapiredisstackapigateway34520EA0"
                },
                "/",
                {
                  "Ref": "redisstackapiredisstackapigatewayDeploymentStageprod30E99B02"
                },
                "/POST/reset-redis"
              ]
            ]
          }
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Default/reset-redis/POST/ApiPermission.redisstackredisstackapiredisstackapigateway2FAC28C4.POST..reset-redis"
        }
      },
      "redisstackapiredisstackapigatewayresetredisPOSTApiPermissionTestredisstackredisstackapiredisstackapigateway2FAC28C4POSTresetredis00362AAA": {
        "Type": "AWS::Lambda::Permission",
        "Properties": {
          "Action": "lambda:InvokeFunction",
          "FunctionName": {
            "Fn::GetAtt": [
              "redisstackresetredislambdaredisstackresetredislambdafnDAD2AAC5",
              "Arn"
            ]
          },
          "Principal": "apigateway.amazonaws.com",
          "SourceArn": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":execute-api:",
                {
                  "Ref": "AWS::Region"
                },
                ":",
                {
                  "Ref": "AWS::AccountId"
                },
                ":",
                {
                  "Ref": "redisstackapiredisstackapigateway34520EA0"
                },
                "/test-invoke-stage/POST/reset-redis"
              ]
            ]
          }
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Default/reset-redis/POST/ApiPermission.Test.redisstackredisstackapiredisstackapigateway2FAC28C4.POST..reset-redis"
        }
      },
      "redisstackapiredisstackapigatewayresetredisPOST74FBE79C": {
        "Type": "AWS::ApiGateway::Method",
        "Properties": {
          "HttpMethod": "POST",
          "ResourceId": {
            "Ref": "redisstackapiredisstackapigatewayresetredis71789057"
          },
          "RestApiId": {
            "Ref": "redisstackapiredisstackapigateway34520EA0"
          },
          "AuthorizationType": "NONE",
          "Integration": {
            "IntegrationHttpMethod": "POST",
            "IntegrationResponses": [
              {
                "StatusCode": "200"
              }
            ],
            "Type": "AWS",
            "Uri": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":apigateway:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":lambda:path/2015-03-31/functions/",
                  {
                    "Fn::GetAtt": [
                      "redisstackresetredislambdaredisstackresetredislambdafnDAD2AAC5",
                      "Arn"
                    ]
                  },
                  "/invocations"
                ]
              ]
            }
          },
          "MethodResponses": [
            {
              "StatusCode": "200"
            }
          ]
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/redis-stack-api/redis-stack-api-gateway/Default/reset-redis/POST/Resource"
        }
      },
      "CDKMetadata": {
        "Type": "AWS::CDK::Metadata",
        "Properties": {
          "Modules": "aws-cdk=1.87.1,@aws-cdk/assets=1.76.0,@aws-cdk/aws-apigateway=1.76.0,@aws-cdk/aws-applicationautoscaling=1.76.0,@aws-cdk/aws-autoscaling-common=1.76.0,@aws-cdk/aws-certificatemanager=1.76.0,@aws-cdk/aws-cloudwatch=1.76.0,@aws-cdk/aws-codeguruprofiler=1.76.0,@aws-cdk/aws-ec2=1.76.0,@aws-cdk/aws-ecr=1.76.0,@aws-cdk/aws-ecr-assets=1.76.0,@aws-cdk/aws-efs=1.76.0,@aws-cdk/aws-elasticache=1.76.0,@aws-cdk/aws-elasticloadbalancingv2=1.76.0,@aws-cdk/aws-events=1.76.0,@aws-cdk/aws-iam=1.76.0,@aws-cdk/aws-kms=1.76.0,@aws-cdk/aws-lambda=1.76.0,@aws-cdk/aws-logs=1.76.0,@aws-cdk/aws-route53=1.76.0,@aws-cdk/aws-s3=1.76.0,@aws-cdk/aws-s3-assets=1.76.0,@aws-cdk/aws-sqs=1.76.0,@aws-cdk/aws-ssm=1.76.0,@aws-cdk/cloud-assembly-schema=1.76.0,@aws-cdk/core=1.76.0,@aws-cdk/cx-api=1.76.0,@aws-cdk/region-info=1.76.0,jsii-runtime=Java/11.0.9.1"
        },
        "Metadata": {
          "aws:cdk:path": "redis-stack/CDKMetadata/Default"
        },
        "Condition": "CDKMetadataAvailable"
      }
    },
    "Outputs": {
      "redisstackapiredisstackapigatewayEndpointA4803869": {
        "Value": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "redisstackapiredisstackapigateway34520EA0"
              },
              ".execute-api.",
              {
                "Ref": "AWS::Region"
              },
              ".",
              {
                "Ref": "AWS::URLSuffix"
              },
              "/",
              {
                "Ref": "redisstackapiredisstackapigatewayDeploymentStageprod30E99B02"
              },
              "/"
            ]
          ]
        }
      }
    },
    "Conditions": {
      "CDKMetadataAvailable": {
        "Fn::Or": [
          {
            "Fn::Or": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "ap-east-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "ap-northeast-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "ap-northeast-2"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "ap-south-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "ap-southeast-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "ap-southeast-2"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "ca-central-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "cn-north-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "cn-northwest-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "eu-central-1"
                ]
              }
            ]
          },
          {
            "Fn::Or": [
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "eu-north-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "eu-west-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "eu-west-2"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "eu-west-3"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "me-south-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "sa-east-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "us-east-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "us-east-2"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "us-west-1"
                ]
              },
              {
                "Fn::Equals": [
                  {
                    "Ref": "AWS::Region"
                  },
                  "us-west-2"
                ]
              }
            ]
          }
        ]
      }
    }
  }
  